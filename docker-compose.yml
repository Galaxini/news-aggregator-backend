version: '3'

services:
  # PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: php:8.1-fpm
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  # Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "8000:80"  # Map host port 8000 to container port 80
    volumes:
      - ./:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  # MySQL Service
  db:
    image: mysql:5.7
    container_name: db
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=news_aggregator
      - MYSQL_USER=user
      - MYSQL_PASSWORD=pass

  redis:
    image: redis:latest
    container_name: redis
    networks:
      - app-network

  react:
    container_name: news-aggregator-frontend
    build:
      context: ./../news-aggregator-frontend
      dockerfile: Dockerfile
    volumes:
      - ./../news-aggregator-frontend:/app
    ports:
      - "3000:3000"

# Define the mysql-data volume
volumes:
  mysql-data:

# Docker Networks
networks:
  app-network:
    driver: bridge